// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext.kotlin_version = '1.5.20'

    ext {

        // global variables
        compile_sdk_version = 30
        min_sdk_version = 21
        core_ktx = '1.6.0'

        androidx_compat = '1.2.0'
        androidx_fragment = '1.3.2'
        constrain_version = '2.1.0-beta01'
        swiperefresh = '1.1.0'
        recyclerview_ver = '1.2.1'

        kotlin_std = "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
        app_compat = "androidx.appcompat:appcompat:$androidx_compat"
        fragmentx = "androidx.fragment:fragment-ktx:$androidx_fragment"
        kotlin_core_ktx = "androidx.core:core-ktx:$core_ktx"
        refreshlayout = "androidx.swiperefreshlayout:swiperefreshlayout:$swiperefresh"
        constrain = "androidx.constraintlayout:constraintlayout:$constrain_version"
        fab = 'com.google.android.material:material:1.3.0'
        google_component = fab
        recyclerview = "androidx.recyclerview:recyclerview:$recyclerview_ver"
        card_view = "androidx.cardview:cardview:1.0.0"
        flexboxlayout = 'com.google.android:flexbox:2.0.1'
        view_pager = "androidx.viewpager2:viewpager2:1.1.0-alpha01"
        dots_indicator = 'com.tbuonomo.andrui:viewpagerdotsindicator:4.1.2'
        notification_media = "androidx.media:media:1.3.0"
        //koin
        koin_version = '3.1.1'
        koin = "io.insert-koin:koin-android:$koin_version"
        def koin_viewmodel = "io.insert-koin:koin-android:$koin_version"

        //mvvm
        lifecycle = '2.3.1'
        def livedata_version = '2.3.1'
        def view_model = "androidx.lifecycle:lifecycle-viewmodel:$lifecycle"
        view_model_live_data = "androidx.lifecycle:lifecycle-livedata-ktx:$livedata_version"
        lifecycle_runtime = "androidx.lifecycle:lifecycle-runtime-ktx:$livedata_version"
        lifecycle_java8 = "androidx.lifecycle:lifecycle-common-java8:$livedata_version"
        def view_model_ktx = "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle"

        //navigation
        nav_version = "2.3.5"
        def navigation = "androidx.navigation:navigation-fragment-ktx:$nav_version"
        def ui_navigation = "androidx.navigation:navigation-ui-ktx:$nav_version"

        //networking
        retrofit_version = '2.9.0'
        moshiConverter = "com.squareup.retrofit2:converter-moshi:$retrofit_version"
        moshi = "com.squareup.moshi:moshi:1.12.0"
        moshi_kapt = "com.squareup.moshi:moshi-kotlin-codegen:1.12.0"

        retrofit = "com.squareup.retrofit2:retrofit:$retrofit_version"
        scalar = "com.squareup.retrofit2:converter-scalars:$retrofit_version"
        loggingInter = 'com.squareup.okhttp3:logging-interceptor:4.9.1'


        //unit tests
        kotlin_test_ver = '4.6.0'
        kotlin_junit = "org.jetbrains.kotlin:kotlin-test-junit:${kotlin_version}"
        runtimeJunit5 = 'org.junit.jupiter:junit-jupiter-engine:5.7.1'
        junit5 = 'org.junit.jupiter:junit-jupiter-api:5.7.1'
        atchitcture_component_test = "androidx.arch.core:core-testing:2.1.0"

        //android testing
        def testRunnerVersion = '1.4.0'
        def test_runner = "androidx.test:runner:$testRunnerVersion"
        def test_rules = "androidx.test:rules:$testRunnerVersion"
        def test_core = "androidx.test:core-ktx:$testRunnerVersion"
        def fragment_testing = "androidx.fragment:fragment-testing:1.3.2"


        //coroutines
        def coroutines_android_version = '1.5.0-RC'
        coroutines_core = "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_android_version"
        coroutines_android = "org.jetbrains.kotlinx:kotlinx-coroutines-android:${coroutines_android_version}"

        corouines_test = "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_android_version"
        standards = [
                kotlin_std, app_compat, kotlin_core_ktx, refreshlayout, recyclerview, google_component
        ]

        mvvms = [
                view_model, view_model_live_data, view_model_ktx, lifecycle_runtime, lifecycle_java8
        ]

        depedency_injection = [
                koin
        ]
        depedency_injections = [
                koin, koin_viewmodel
        ]

        networking = [
                retrofit, loggingInter, scalar, moshiConverter, moshi
        ]

        navigations = [
                navigation, ui_navigation
        ]

        coroutines = [
                coroutines_core, coroutines_android
        ]
        android_integration_test = [
                kotlin_junit,test_runner, test_rules, test_core, fragment_testing
        ]

        //UI testing
        espresso = 'androidx.test.espresso:espresso-core:3.3.0'
        espresso_contrib = 'androidx.test.espresso:espresso-contrib:3.3.0'
        kakao = 'com.agoda.kakao:kakao:2.4.0'
        mock_android = 'io.mockk:mockk-android:1.11.0'
        mock = 'io.mockk:mockk:1.11.0'

        unit_tests = [
                kotlin_junit, mock, junit5
        ]
        unit_tests4 = [
                kotlin_junit, mock
        ]
        android_ui_testing = [
                espresso, kakao, mock_android
        ]
        view_pagers = [
                view_pager, dots_indicator
        ]

        //room
        def room_version = '2.3.0'
        def room = "androidx.room:room-ktx:$room_version"
        room_kapt = "androidx.room:room-compiler:$room_version"
        database = [
                room
        ]
        database_kapt = [
                room_kapt
        ]

        ///firebase
        analitics = 'com.google.firebase:firebase-analytics-ktx:18.0.3'
        crashlitics = 'com.google.firebase:firebase-crashlytics:18.1.0'
        dynamicLinks = 'com.google.firebase:firebase-dynamic-links-ktx:19.1.1'

        fcm = 'com.google.firebase:firebase-messaging:21.1.0'
        def location = "com.google.android.gms:play-services-location:17.0.0"
        auth = 'com.google.android.gms:play-services-auth:19.0.0'
        firebase = [
                analitics, crashlitics, dynamicLinks
        ]

        picasso = 'com.squareup.picasso:picasso:2.71828'


    }
    repositories {
        google()
        jcenter()

    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.2.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.google.gms:google-services:4.3.8'
        classpath 'com.google.firebase:firebase-crashlytics-gradle:2.7.1'
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        maven { url "https://jitpack.io" }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
